{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","style","color","heading","value","backgroundColor","onChange","event","target","rows","newText","toUpperCase","showAlert","toLowerCase","i","length","charAt","split","defaultProps","aboutText","Alert","alert","role","word","lower","slice","captialize","msg","App","setMode","setAlert","message","setTimeout","document","body","setInterval","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4eecc152.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n        </li>\r\n        {/* <li className=\"nav-item\">\r\n          <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>\r\n        </li> */}\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link\" href=\"/contact\">Contact us</a>\r\n        </li>\r\n        \r\n       \r\n      </ul>\r\n      {/* <form className=\"d-flex\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/> \r\n        <button className=\"btn btn-primary\" type=\"submit\">Search</button>\r\n      </form> */}\r\n      <div className={`form-check form-switch text-${props.mode === 'light'? 'dark':'light'}`}>\r\n  <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n</div>\r\n    </div>\r\n  </div>\r\n</nav>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    aboutText: PropTypes.string.isRequired\r\n};\r\n\r\nNavbar.defaultProps = {\r\n    title: 'Set title here',\r\n    aboutText: 'About text here'\r\n};","import React, {useState} from 'react'\r\n\r\n\r\n\r\nexport default function TextForm(props) {\r\n\r\n    const handleUpClick = ()=>{\r\n        // console.log(\"clicked\");\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to upperCase\", \"success\")\r\n    }\r\n\r\n    const handleLoClick = ()=>{\r\n        // console.log(\"clicked\");\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to LowerCase\", \"success\")\r\n    }\r\n\r\n    const captialFirstWord = ()=>{\r\n        \r\n        let newText=\"\";\r\n        let str=\"\";\r\n       for(let i=0; i < text.length; i++){\r\n          \r\n            if(text.charAt(i)===\".\"){\r\n               str= text.charAt(i+2).toUpperCase();\r\n               newText +=\". \";\r\n               newText += str;\r\n               i +=2;\r\n            }\r\n           else{\r\n           newText += text.charAt(i);\r\n           }\r\n    \r\n           \r\n       }\r\n       setText(newText);\r\n        \r\n      \r\n    }\r\n\r\n    const handleOnChange = (event)=>{\r\n        // console.log(\"clickeddfdf\");\r\n        setText(event.target.value)\r\n    }\r\n\r\n    const [text, setText] = useState('');\r\n    return (\r\n        <>\r\n        <div className =\"container\" style={{color:props.mode === 'dark'? 'white':'#042743'}}>\r\n            <h1>{props.heading}</h1>\r\n            <div className=\"mb-3\">\r\n            <textarea className=\"form-control\" value={text} style={{backgroundColor: props.mode === 'dark'? 'grey':'white', color: props.mode === 'dark'? 'white':'#042743' }} onChange={handleOnChange} id=\"mybox\" rows=\"8\"></textarea>\r\n            </div>\r\n            <button className=\"btn btn-primary mx-2\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n            <button className=\"btn btn-primary mx-2\" onClick={handleLoClick}>Convert to Lowercase</button>\r\n            <button className=\"btn btn-primary mx-2\" onClick={captialFirstWord}>Captial First Word</button>\r\n        </div>\r\n        <div className=\"container my-3\" style={{color:props.mode === 'dark'? 'white':'#042743'}}>\r\n            <h1>Your text Summary</h1>\r\n            <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n            <p>{0.008 * text.split(\" \").length} Minutes read</p>\r\n            <h2>Preview</h2>\r\n            <p>{text.length>0?text:\"Enter something in the textbox above to preview it here\"}</p>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const captialize= (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n       props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            {captialize(props.alert.type)}: {props.alert.msg}\r\n  \r\n</div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","\nimport './App.css';\nimport { useState } from 'react';\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport Alert from './components/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route\n// } from \"react-router-dom\";\n\n\nfunction App() {\n  const [mode, setMode] = useState('light');  \n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type)=>{\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  }\n\n  const toggleMode = ()=>{\n    if(mode === 'light'){\n    setMode('dark')\n    document.body.style.backgroundColor = '#042743';\n    showAlert(\"Dark mode has been enabled\", \"success\");\n    document.title = 'Stationery Things - Dark Mode';\n    setInterval(() => {\n      document.title = 'Weekend sale start';\n    }, 2000);\n    setInterval(() => {\n      document.title = 'Sale Start Midnight';\n    }, 1500);\n    }\n\n    else{\n      setMode('light')\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled\", \"success\");\n      document.title = 'Stationery Things - Light Mode';\n    }\n  }\n  return (\n  <>\n  {/* <Router> */}\n   <Navbar title=\"Stationery Things.in\" mode={mode} toggleMode = {toggleMode}/>\n   <Alert alert={alert}/>\n    <div className=\"container my-3\">\n    {/* <Switch> */}\n          {/* <Route exact path=\"/about\"> */}\n            {/* <About />  */}\n        \n          {/* </Route> */}\n          {/* <Route exact path=\"/\"> */}\n          <TextForm showAlert={showAlert} heading = \"Enter the text to analyze below\" mode={mode}/>\n          \n          {/* </Route> */}\n     {/* </Switch> */}\n      \n      {/* <About/> */}\n    </div>\n    {/* </Router> */}\n   </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}